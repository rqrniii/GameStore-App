steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t',
        'me-central2-docker.pkg.dev/$PROJECT_ID/salam-builds/react-app:$SHORT_SHA',
        '-t',
        'me-central2-docker.pkg.dev/$PROJECT_ID/salam-builds/react-app:latest',
        '.'
      ]

  # Step 2: Push the image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        'me-central2-docker.pkg.dev/$PROJECT_ID/salam-builds/react-app:$SHORT_SHA'
      ]

  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        'me-central2-docker.pkg.dev/$PROJECT_ID/salam-builds/react-app:latest'
      ]

  # Step 3: SSH into VM and deploy with docker-compose
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - -c
      - |
        VM_NAME="gcp-stg-app-01"
        VM_ZONE="me-central2-c"
        IMAGE="me-central2-docker.pkg.dev/$PROJECT_ID/salam-builds/react-app:latest"

        echo ">>> Connecting to VM: $VM_NAME in $VM_ZONE"
        gcloud compute ssh $VM_NAME --zone $VM_ZONE --tunnel-through-iap --command "
          mkdir -p ~/deploy && cd ~/deploy
          echo '>>> Writing docker-compose.yml'
          cat > docker-compose.yml <<EOF
          version: '3.8'
          services:
            react-app:
              image: $IMAGE
              ports:
                - '8080:8080'
              restart: unless-stopped
          EOF
          echo '>>> Pulling latest image'
          docker compose pull
          echo '>>> Restarting app'
          docker compose up -d --remove-orphans
          echo '>>> Running containers'
          docker ps
        "

images:
  - 'me-central2-docker.pkg.dev/$PROJECT_ID/salam-builds/react-app:$SHORT_SHA'
  - 'me-central2-docker.pkg.dev/$PROJECT_ID/salam-builds/react-app:latest'

options:
  logging: CLOUD_LOGGING_ONLY
